<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions"
	xmlns:fn="http://java.sun.com/jsp/jstl/functions">
<ui:composition>
	<pe:blockUI widgetVar="viewtaskBlockUIWidget"
		target="viewTaskPanelGrid">
		<h:panelGrid columns="2" layout="grid">
			<p:graphicImage library="images" name="ajax-loader.gif"
				style="vertical-align: middle;" />
			<h:outputText value="#{messages.label_refresh}"
				style="white-space: nowrap;" />
		</h:panelGrid>
	</pe:blockUI>
	<p:panelGrid id="viewTaskPanelGrid" columns="1"
		style="height: #{jJTaskBean.height}px ; width: #{jJTaskBean.width}px;">
		<h:panelGrid columns="6" style="width: 100%">
			<p:outputLabel value="Sprint :" for="taskSprint" />
			<p:autoComplete id="taskSprint" value="#{JJTask_.sprint}"
				itemLabel="#{sprint != null ? sprint.name : messages.label_select}" itemValue="#{sprint}" scrollHeight="200"
				converter="com.starit.janjoonweb.ui.mb.converter.JJSprintConverter"
				dropdown="true" var="sprint" binding="#{sprintComponent}"
				completeMethod="#{jJTaskBean.completeSprintTask}" size="15">
				<p:ajax event="itemSelect"
					update="taskStartDatePlanned taskEndDatePlanned taskAssignedTo" />
				<f:attribute name="project" value="#{JJTask_.project}" />
			</p:autoComplete>

			<p:outputLabel value="#{messages.taskDialog_assignedTo} :"
				for="taskAssignedTo" />
			<p:autoComplete id="taskAssignedTo" value="#{JJTask_.assignedTo}"
				size="15" itemLabel="#{assignedTo != null ? assignedTo.name : messages.label_select}"
				itemValue="#{assignedTo}" scrollHeight="200"
				converter="com.starit.janjoonweb.ui.mb.converter.JJContactConverter"
				dropdown="true" var="assignedTo"
				completeMethod="#{jJTaskBean.completeAssignedToTask}">
			</p:autoComplete>

			<p:outputLabel value="Status :" for="taskStatus" />
			<p:autoComplete id="taskStatus" value="#{JJTask_.status}"
				itemLabel="#{messages['status_'.concat(fn:replace(status.name, ' ', '_'))]}" 
				itemValue="#{status}" scrollHeight="200"
				converter="com.starit.janjoonweb.ui.mb.converter.JJStatusConverter"
				dropdown="true" var="status" size="15"
				completeMethod="#{jJTaskBean.completeStatusTask}" />

		</h:panelGrid>
		<h:panelGrid columns="8" style="width: 100%">
			<p:outputLabel value="#{messages.project_scrum_new_start_label}"
				for="taskStartDatePlanned" />
			<p:calendar id="taskStartDatePlanned" style="width:90px"
				value="#{JJTask_.startDatePlanned}" navigator="true"
				pattern="yyyy/MM/dd HH:mm" required="true"
				binding="#{taskStartDatePlanned}">
				<f:validator validatorId="dateRangeValidator" />
				<f:attribute name="edition" value="startDatePlanned" />
				<f:attribute name="sprintComponent" value="#{sprintComponent}" />
				<f:attribute name="taskEndDatePlanned" value="#{taskEndDatePlanned}" />
				<f:attribute name="task" value="#{JJTask_}" />
				<p:ajax event="dateSelect" update="taskEndDatePlanned" />
			</p:calendar>

			<p:outputLabel value="#{messages.project_scrum_new_end_label}"
				for="taskEndDatePlanned" />
			<p:calendar id="taskEndDatePlanned" style="width:90px"
				value="#{JJTask_.endDatePlanned}" navigator="true"
				pattern="yyyy/MM/dd HH:mm" required="true"
				binding="#{taskEndDatePlanned}">
				<f:validator validatorId="dateRangeValidator" />
				<f:attribute name="edition" value="endDatePlanned" />
				<f:attribute name="taskStartDatePlanned"
					value="#{taskStartDatePlanned}" />
				<f:attribute name="sprintComponent" value="#{sprintComponent}" />
				<f:attribute name="task" value="#{JJTask_}" />
				<f:attribute name="workload" value="#{workload}" />
				<p:ajax event="dateSelect" update="taskEndDatePlanned" />
			</p:calendar>

			<p:outputLabel
				value="#{messages.specification_create_workload_label}:"
				for="taskWorkload" />
			<p:spinner id="taskWorkload" value="#{JJTask_.workloadPlanned}"
				stepFactor="1" min="1" required="true" size="3"
				binding="#{workload}">
				<p:ajax update="taskEndDatePlanned" />
			</p:spinner>
			<p:outputLabel value="#{messages.label_requirement} :" for="taskSpec" />
			<p:selectBooleanCheckbox id="taskSpec"
				value="#{JJTask_.specification}" />
		</h:panelGrid>
		<p:panelGrid>
			<p:row rowspan="5" rendered="#{JJTask_.bug != null}">
				<p:column colspan="2">
					<p:outputLabel value="Bug :" for="taskBug" />
					<p:inputTextarea id="taskBug" readonly="true"
						converter="JJBugConverter" cols="30" value="#{JJTask_.bug}" />
				</p:column>
				<p:column colspan="4" rendered="#{jJTaskBean.taskTreeNode == null}">
					<p:outputLabel value="Description :" />
					<br />
					<pe:ckEditor id="Bugdescription"
						toolbar="#{imageStreamer.ckEditorToolBar}" style="width:680px"
						value="#{JJTask_.bug.description}" readOnly="true"
						rendered="#{!loginBean.mobile}" />
					<p:editor id="BugMobiledescription" style="width:680px"
						value="#{JJTask_.bug.description}" readOnly="true"
						rendered="#{loginBean.mobile}" />
				</p:column>
			</p:row>
			<p:row rowspan="5"
				rendered="#{JJTask_.testcase != null and jJTaskBean.taskTreeNode == null}">
				<p:column colspan="2">
					<p:outputLabel value="TestCase :" for="taskTestCase" />
					<p:inputTextarea id="taskTestCase" readonly="true" cols="30"
						converter="JJTestcaseConverter" value="#{JJTask_.testcase}" />
				</p:column>
				<p:column colspan="4">
					<p:outputLabel value="Description :" />
					<br />
					<pe:ckEditor id="testCasedescription"
						toolbar="#{imageStreamer.ckEditorToolBar}" style="width:680px"
						value="#{JJTask_.testcase.description}" readOnly="true"
						rendered="#{!loginBean.mobile}" />
					<p:editor id="testcaseMobiledescription" style="width:680px"
						value="#{JJTask_.testcase.description}" readOnly="true"
						rendered="#{loginBean.mobile}" />
				</p:column>
			</p:row>

			<p:row rowspan="5" rendered="#{jJTaskBean.taskTreeNode != null}">
				<p:column colspan="2">
					<h:outputLabel id="requirementLabel"
						value="#{messages.label_requirement}: " for="reqTree" />
					<p:tree id="reqTree" value="#{jJTaskBean.taskTreeNode}" var="node"
						selection="#{jJTaskBean.selectedTree}" animate="true"
						selectionMode="single">
						<p:ajax event="select" update=":viewTaskForm:taskTreePanelGrid"
							listener="#{jJTaskBean.onSelectTreeNode}"
							onstart="PF('viewtaskBlockUIWidget').block()"
							oncomplete="PF('viewtaskBlockUIWidget').unblock()" />
						<p:treeNode icon="ui-icon-arrowthick-1-e">
							<h:outputText value="#{node.name}" />
						</p:treeNode>
					</p:tree>
				</p:column>
				<p:column colspan="4">
					<p:panelGrid id="taskTreePanelGrid" style="margin-top:10px">
						<f:facet name="header">
							<p:row>
								<p:column colspan="3">#{messages.label_requirement}: <p:outputLabel
										value="#{jJTaskBean.selectedReq.name}" />
								</p:column>
							</p:row>
						</f:facet>
						<p:row>
							<p:column colspan="1" style="border-style: none;">
								<p:outputLabel value="#{messages.label_category}:"
									for="category" />
								<p:inputText id="category" size="15"
									value="#{jJTaskBean.selectedReq.category}" readonly="true"
									converter="JJCategoryConverter" />
							</p:column>
							<p:column colspan="1" style="border-style: none;">
								<h:outputText for="status" value="Status :" />
								<p:inputText id="status" size="15"
									value="#{jJTaskBean.selectedReq.status}" readonly="true"
									converter="JJStatusConverter" />
							</p:column>

							<p:column style="border-style: none;">
								<h:outputText for="chapter" value="#{messages.label_chapter}:" />
								<p:inputText id="chapter" readonly="true"
									converter="JJChapterConverter" size="15"
									value="#{jJTaskBean.selectedReq.chapter}" />
							</p:column>
						</p:row>
						<p:row>
							<p:column colspan="3">
								<p:outputLabel value="Description :" />
								<br />
								<pe:ckEditor id="description"
									toolbar="#{imageStreamer.ckEditorToolBar}" style="width:680px"
									rendered="#{!loginBean.mobile}"
									value="#{jJTaskBean.selectedReq.description}" readOnly="true" />

								<p:editor id="descriptionMobile" style="width:680px"
									rendered="#{loginBean.mobile}"
									value="#{jJTaskBean.selectedReq.description}" readOnly="true" />
							</p:column>
						</p:row>
					</p:panelGrid>
				</p:column>
			</p:row>
		</p:panelGrid>
	</p:panelGrid>
</ui:composition>
</html>