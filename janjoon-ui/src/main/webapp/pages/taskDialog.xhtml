<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<html xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:ui="http://java.sun.com/jsf/facelets"
	xmlns:p="http://primefaces.org/ui"
	xmlns:pe="http://primefaces.org/ui/extensions">
<ui:composition >
	<p:panelGrid id="viewTaskPanelGrid">
		<p:row>
			<p:column colspan="2">
				<p:outputLabel value="Sprint :" for="taskSprint" />
				<p:inputText id="taskSprint" readonly="true"
					converter="JJSprintConverter"
					value="#{jJTaskBean.task.sprint}" />
			</p:column>
			<p:column colspan="2">
				<p:outputLabel value="Assigned To :" for="taskAssignedTo" />
				<p:inputText id="taskAssignedTo" readonly="true"
					converter="JJContactConverter"
					value="#{jJTaskBean.task.assignedTo}" />
			</p:column>
			<p:column colspan="2">
				<p:outputLabel value="Status :" for="taskStatus" />
				<p:inputText id="taskStatus" readonly="true"
					converter="JJStatusConverter"
					value="#{jJTaskBean.task.status}" />
			</p:column>
		</p:row>
		<p:row>
			<p:column colspan="2">
				<p:outputLabel value="Start Date :" for="taskStartDatePlanned" />
				<p:inputText id="taskStartDatePlanned" readonly="true"
					value="#{jJTaskBean.task.startDatePlanned}">
					<f:converter converterId="extendedDateTimeConverter" />
					<f:attribute name="pattern" value="dd/MM/yyyy" />
					<f:attribute name="timeZone" value="UCL" />
				</p:inputText>
			</p:column>
			<p:column colspan="2">
				<p:outputLabel value="End Date :" for="taskEndDatePlanned" />
				<p:inputText id="taskEndDatePlanned" readonly="true"
					value="#{jJTaskBean.task.endDatePlanned}">
					<f:converter converterId="extendedDateTimeConverter" />
					<f:attribute name="pattern" value="dd/MM/yyyy" />
					<f:attribute name="timeZone" value="UCL" />
				</p:inputText>
			</p:column>
			<p:column colspan="2">
				<p:outputLabel value="Workload Planned :" for="taskWorkload" />
				<p:inputText id="taskWorkload" readonly="true"
					value="#{jJTaskBean.task.workloadPlanned}" />
			</p:column>
		</p:row>
		
		<p:row  rowspan="5"  rendered="#{jJTaskBean.taskTreeNode != null}">
			<p:column colspan="2">
				<h:outputLabel id="requirementLabel" value="Requirement: "
					for="reqTree" />
				<p:tree id="reqTree" value="#{jJTaskBean.taskTreeNode}" var="node"
					animate="true" selection="#{jJTaskBean.selectedTree}"
					selectionMode="single">
					<p:ajax event="select" update="@form"
						listener="#{jJTaskBean.onSelectTreeNode}" />
					<p:treeNode icon="ui-icon-arrowthick-1-e">
						<h:outputText value="#{node.name}" />
					</p:treeNode>
				</p:tree>
			</p:column>
			<p:column colspan="4">				
					<p:panelGrid style="margin-top:10px" >
						<f:facet name="header">
							<p:row>
								<p:column colspan="2">Requirement : <p:outputLabel
										value="#{jJTaskBean.selectedReq.name}" />
								</p:column>
							</p:row>
						</f:facet>
						<p:row>
							<p:column colspan="1">
								<p:outputLabel value="Category :" for="category" />
								<p:inputText id="category"
									value="#{jJTaskBean.selectedReq.category}" readonly="true"
									converter="JJCategoryConverter" />
							</p:column>
							<p:column colspan="1">
								<h:outputText for="status" value="Status :" />
								<p:inputText id="status"
									value="#{jJTaskBean.selectedReq.status}" readonly="true"
									converter="JJStatusConverter" />
							</p:column>
						</p:row>
						<p:row>
							<p:column colspan="1">
								<h:outputText for="chapter" value="Chapter :" />
								<p:inputText id="chapter" readonly="true"
									converter="JJChapterConverter"
									value="#{jJTaskBean.selectedReq.chapter}" />
							</p:column>
						</p:row>
						<p:row>
							<p:column colspan="2">
								<p:outputLabel for="description" value="Description :" />
								<br />
								<pe:ckEditor id="description" toolbar="[['Copy']]"
									style="width:680px"
									value="#{jJTaskBean.selectedReq.description}" readOnly="true" />
							</p:column>
						</p:row>
					</p:panelGrid>				
			</p:column>
		</p:row>
	
	</p:panelGrid>
</ui:composition>
</html>