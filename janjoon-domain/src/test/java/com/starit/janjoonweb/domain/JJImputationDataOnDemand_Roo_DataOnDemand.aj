// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.starit.janjoonweb.domain;

import com.starit.janjoonweb.domain.JJContactDataOnDemand;
import com.starit.janjoonweb.domain.JJImputation;
import com.starit.janjoonweb.domain.JJImputationDataOnDemand;
import com.starit.janjoonweb.domain.JJImputationRepository;
import com.starit.janjoonweb.domain.JJImputationService;
import com.starit.janjoonweb.domain.JJTaskDataOnDemand;
import java.security.SecureRandom;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.Iterator;
import java.util.List;
import java.util.Random;
import javax.validation.ConstraintViolation;
import javax.validation.ConstraintViolationException;
import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Component;

privileged aspect JJImputationDataOnDemand_Roo_DataOnDemand{

declare @type:JJImputationDataOnDemand:@Component;

private Random JJImputationDataOnDemand.rnd=new SecureRandom();

private List<JJImputation>JJImputationDataOnDemand.data;

@Autowired JJContactDataOnDemand JJImputationDataOnDemand.jJContactDataOnDemand;

@Autowired JJTaskDataOnDemand JJImputationDataOnDemand.jJTaskDataOnDemand;

@Autowired JJImputationService JJImputationDataOnDemand.jJImputationService;

@Autowired JJImputationRepository JJImputationDataOnDemand.jJImputationRepository;

public JJImputation JJImputationDataOnDemand.getNewTransientJJImputation(int index){JJImputation obj=new JJImputation();setEndAction(obj,index);setImputationDate(obj,index);setStartAction(obj,index);setWorkloadRemaining(obj,index);return obj;}

public void JJImputationDataOnDemand.setEndAction(JJImputation obj,int index){Date endAction=new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR),Calendar.getInstance().get(Calendar.MONTH),Calendar.getInstance().get(Calendar.DAY_OF_MONTH),Calendar.getInstance().get(Calendar.HOUR_OF_DAY),Calendar.getInstance().get(Calendar.MINUTE),Calendar.getInstance().get(Calendar.SECOND)+new Double(Math.random()*1000).intValue()).getTime();obj.setEndAction(endAction);}

public void JJImputationDataOnDemand.setImputationDate(JJImputation obj,int index){Date imputationDate=new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR),Calendar.getInstance().get(Calendar.MONTH),Calendar.getInstance().get(Calendar.DAY_OF_MONTH),Calendar.getInstance().get(Calendar.HOUR_OF_DAY),Calendar.getInstance().get(Calendar.MINUTE),Calendar.getInstance().get(Calendar.SECOND)+new Double(Math.random()*1000).intValue()).getTime();obj.setImputationDate(imputationDate);}

public void JJImputationDataOnDemand.setStartAction(JJImputation obj,int index){Date startAction=new GregorianCalendar(Calendar.getInstance().get(Calendar.YEAR),Calendar.getInstance().get(Calendar.MONTH),Calendar.getInstance().get(Calendar.DAY_OF_MONTH),Calendar.getInstance().get(Calendar.HOUR_OF_DAY),Calendar.getInstance().get(Calendar.MINUTE),Calendar.getInstance().get(Calendar.SECOND)+new Double(Math.random()*1000).intValue()).getTime();obj.setStartAction(startAction);}

public void JJImputationDataOnDemand.setWorkloadRemaining(JJImputation obj,int index){Integer workloadRemaining=new Integer(index);obj.setWorkloadRemaining(workloadRemaining);}

public JJImputation JJImputationDataOnDemand.getSpecificJJImputation(int index){init();if(index<0){index=0;}if(index>(data.size()-1)){index=data.size()-1;}JJImputation obj=data.get(index);Long id=obj.getId();return jJImputationService.findJJImputation(id);}

public JJImputation JJImputationDataOnDemand.getRandomJJImputation(){init();JJImputation obj=data.get(rnd.nextInt(data.size()));Long id=obj.getId();return jJImputationService.findJJImputation(id);}

public boolean JJImputationDataOnDemand.modifyJJImputation(JJImputation obj){return false;}

public void JJImputationDataOnDemand.init(){int from=0;int to=10;data=jJImputationService.findJJImputationEntries(from,to);if(data==null){throw new IllegalStateException("Find entries implementation for 'JJImputation' illegally returned null");}if(!data.isEmpty()){return;}

data=new ArrayList<JJImputation>();for(int i=0;i<10;i++){JJImputation obj=getNewTransientJJImputation(i);try{jJImputationService.saveJJImputation(obj);}catch(final ConstraintViolationException e){final StringBuilder msg=new StringBuilder();for(Iterator<ConstraintViolation<?>>iter=e.getConstraintViolations().iterator();iter.hasNext();){final ConstraintViolation<?>cv=iter.next();msg.append("[").append(cv.getRootBean().getClass().getName()).append(".").append(cv.getPropertyPath()).append(": ").append(cv.getMessage()).append(" (invalid value = ").append(cv.getInvalidValue()).append(")").append("]");}throw new IllegalStateException(msg.toString(),e);}jJImputationRepository.flush();data.add(obj);}}

}
