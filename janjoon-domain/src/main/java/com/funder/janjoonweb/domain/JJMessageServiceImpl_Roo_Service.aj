// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.funder.janjoonweb.domain;

import com.funder.janjoonweb.domain.JJMessage;
import com.funder.janjoonweb.domain.JJMessageRepository;
import com.funder.janjoonweb.domain.JJMessageServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect JJMessageServiceImpl_Roo_Service {
    
    declare @type: JJMessageServiceImpl: @Service;
    
    declare @type: JJMessageServiceImpl: @Transactional;
    
    @Autowired
    JJMessageRepository JJMessageServiceImpl.jJMessageRepository;
    
    public long JJMessageServiceImpl.countAllJJMessages() {
        return jJMessageRepository.count();
    }
    
    public void JJMessageServiceImpl.deleteJJMessage(JJMessage JJMessage_) {
        jJMessageRepository.delete(JJMessage_);
    }
    
    public JJMessage JJMessageServiceImpl.findJJMessage(Long id) {
        return jJMessageRepository.findOne(id);
    }
    
    public List<JJMessage> JJMessageServiceImpl.findAllJJMessages() {
        return jJMessageRepository.findAll();
    }
    
    public List<JJMessage> JJMessageServiceImpl.findJJMessageEntries(int firstResult, int maxResults) {
        return jJMessageRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void JJMessageServiceImpl.saveJJMessage(JJMessage JJMessage_) {
        jJMessageRepository.save(JJMessage_);
    }
    
    public JJMessage JJMessageServiceImpl.updateJJMessage(JJMessage JJMessage_) {
        return jJMessageRepository.save(JJMessage_);
    }
    
}
