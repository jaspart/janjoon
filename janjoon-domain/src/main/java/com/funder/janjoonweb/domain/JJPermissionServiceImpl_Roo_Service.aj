// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.funder.janjoonweb.domain;

import com.funder.janjoonweb.domain.JJPermission;
import com.funder.janjoonweb.domain.JJPermissionRepository;
import com.funder.janjoonweb.domain.JJPermissionServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect JJPermissionServiceImpl_Roo_Service {
    
    declare @type: JJPermissionServiceImpl: @Service;
    
    declare @type: JJPermissionServiceImpl: @Transactional;
    
    @Autowired
    JJPermissionRepository JJPermissionServiceImpl.jJPermissionRepository;
    
    public long JJPermissionServiceImpl.countAllJJPermissions() {
        return jJPermissionRepository.count();
    }
    
    public void JJPermissionServiceImpl.deleteJJPermission(JJPermission JJPermission_) {
        jJPermissionRepository.delete(JJPermission_);
    }
    
    public JJPermission JJPermissionServiceImpl.findJJPermission(Long id) {
        return jJPermissionRepository.findOne(id);
    }
    
    public List<JJPermission> JJPermissionServiceImpl.findAllJJPermissions() {
        return jJPermissionRepository.findAll();
    }
    
    public List<JJPermission> JJPermissionServiceImpl.findJJPermissionEntries(int firstResult, int maxResults) {
        return jJPermissionRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void JJPermissionServiceImpl.saveJJPermission(JJPermission JJPermission_) {
        jJPermissionRepository.save(JJPermission_);
    }
    
    public JJPermission JJPermissionServiceImpl.updateJJPermission(JJPermission JJPermission_) {
        return jJPermissionRepository.save(JJPermission_);
    }
    
}
