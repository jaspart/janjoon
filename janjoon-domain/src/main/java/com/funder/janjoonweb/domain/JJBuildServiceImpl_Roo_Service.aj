// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.funder.janjoonweb.domain;

import com.funder.janjoonweb.domain.JJBuild;
import com.funder.janjoonweb.domain.JJBuildRepository;
import com.funder.janjoonweb.domain.JJBuildServiceImpl;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

privileged aspect JJBuildServiceImpl_Roo_Service {
    
    declare @type: JJBuildServiceImpl: @Service;
    
    declare @type: JJBuildServiceImpl: @Transactional;
    
    @Autowired
    JJBuildRepository JJBuildServiceImpl.jJBuildRepository;
    
    public long JJBuildServiceImpl.countAllJJBuilds() {
        return jJBuildRepository.count();
    }
    
    public void JJBuildServiceImpl.deleteJJBuild(JJBuild JJBuild_) {
        jJBuildRepository.delete(JJBuild_);
    }
    
    public JJBuild JJBuildServiceImpl.findJJBuild(Long id) {
        return jJBuildRepository.findOne(id);
    }
    
    public List<JJBuild> JJBuildServiceImpl.findAllJJBuilds() {
        return jJBuildRepository.findAll();
    }
    
    public List<JJBuild> JJBuildServiceImpl.findJJBuildEntries(int firstResult, int maxResults) {
        return jJBuildRepository.findAll(new org.springframework.data.domain.PageRequest(firstResult / maxResults, maxResults)).getContent();
    }
    
    public void JJBuildServiceImpl.saveJJBuild(JJBuild JJBuild_) {
        jJBuildRepository.save(JJBuild_);
    }
    
    public JJBuild JJBuildServiceImpl.updateJJBuild(JJBuild JJBuild_) {
        return jJBuildRepository.save(JJBuild_);
    }
    
}
